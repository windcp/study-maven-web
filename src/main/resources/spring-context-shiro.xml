<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
		http://www.springframework.org/schema/context  http://www.springframework.org/schema/context/spring-context-4.0.xsd"
	default-lazy-init="true">


	<!-- 自定义realm -->
	<bean id="customRealm" class="com.lk.play.common.security.MyRealm">
		<!-- <property name="credentialsMatcher" ref="credentialsMatcher"></property> -->
		<!-- 凭证匹配器 -->
		<property name="credentialsMatcher">
			<bean class="org.apache.shiro.authc.credential.HashedCredentialsMatcher">
				<property name="hashAlgorithmName" value="MD5"></property><!-- 加密算法的名称 -->
				<property name="hashIterations" value="1024"></property> <!-- 配置加密的次数 -->
			</bean>
		</property>
	</bean>

	<!-- 自定义凭证匹配器 -->
	<!-- <bean id="credentialsMatcher" class="com.lk.play.common.security.PasswordMatcher"></bean> -->

	<!-- web.xml中shiro的filter对应的bean -->
	<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
		<!-- 管理器，必须设置 -->
		<property name="securityManager" ref="securityManager" />
		<!-- 拦截到，跳转到的地址,通过此地址去认证 -->
		<property name="loginUrl" value="/login/loginIn" />
		<!-- 通过unauthorizedUrl指定没有权限操作时跳转页面 -->
		<property name="unauthorizedUrl" value="/login/loginIn" />
		<property name="filterChainDefinitions">
			<value>				
				/login/* = anon
				/user/* = authc
				/role/* = authc
			    /** = authc 
			</value>
		</property>
	</bean>

	<!-- securityManager安全管理器 -->
	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
		<property name="realm" ref="customRealm" />
		<!-- 注入缓存管理器 -->
		<property name="cacheManager" ref="cacheManager" />
		<!-- 记住我 -->
		<property name="rememberMeManager" ref="rememberMeManager" />
		<!-- 定义要使用的session管理器 -->
        <property name="sessionManager" ref="sessionManager"/> 
	</bean>

	<!-- 缓存管理器 -->
	<bean id="cacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager">
		<property name="cacheManagerConfigFile" value="classpath:ehcache.xml" />
	</bean>

	<!-- 记住我cookie -->
	<bean id="rememberMeCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
		<!-- rememberMe是cookie的名字 -->
		<constructor-arg value="rememberMe" />
		<!-- 记住我cookie生效时间30天 -->
		<property name="maxAge" value="2592000" />
	</bean>
	<!-- rememberMeManager管理器，写cookie，取出cookie生成用户信息 -->
	<bean id="rememberMeManager" class="org.apache.shiro.web.mgt.CookieRememberMeManager">
		<property name="cookie" ref="rememberMeCookie" />
	</bean>

	<!-- 定义Session ID生成管理器 -->
	<bean id="sessionIdGenerator"
		class="org.apache.shiro.session.mgt.eis.JavaUuidSessionIdGenerator" />

	<!-- 配置Session DAO的操作处理 -->
	<bean id="sessionDAO"
		class="org.apache.shiro.session.mgt.eis.EnterpriseCacheSessionDAO">
		<!-- 设置session缓存的名字，这个名字可以任意 -->
		<property name="activeSessionsCacheName" value="shiro-activeSessionCache" />
		<!-- 定义该Session DAO操作中所使用的ID生成器 -->
		<property name="sessionIdGenerator" ref="sessionIdGenerator" />
	</bean>

	<!-- 配置需要向Cookie中保存数据的配置模版 -->
	<bean id="sessionIdCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
		<!-- 在Tomcat运行下默认使用的Cookie的名字为JSESSIONID -->
		<constructor-arg value="mldn-session-id" />
		<!-- 保证该系统不会受到跨域的脚本操作供给 -->
		<property name="httpOnly" value="true" />
		<!-- 定义Cookie的过期时间，单位为秒，如果设置为-1表示浏览器关闭，则Cookie消失 -->
		<property name="maxAge" value="-1" />
	</bean>
	
	<!-- 配置session的定时验证检测程序类，以让无效的session释放 -->
    <bean id="sessionValidationScheduler"
        class="org.apache.shiro.session.mgt.quartz.QuartzSessionValidationScheduler">
        <!-- 设置session的失效扫描间隔，单位为毫秒 -->
        <property name="sessionValidationInterval" value="100000"/>
        <!-- 随后还需要定义有一个会话管理器的程序类的引用 -->
        <property name="sessionManager" ref="sessionManager"/>
    </bean> 
	
	<!-- 定义会话管理器的操作 -->
    <bean id="sessionManager"
        class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">
        <!-- 定义的是全局的session会话超时时间，此操作会覆盖web.xml文件中的超时时间配置 -->
        <property name="globalSessionTimeout" value="1000000"/>
        <!-- 删除所有无效的Session对象，此时的session被保存在了内存里面 -->
        <property name="deleteInvalidSessions" value="true"/>
        <!-- 定义要使用的无效的Session定时调度器 -->
        <property name="sessionValidationScheduler" ref="sessionValidationScheduler"/>
        <!-- 需要让此session可以使用该定时调度器进行检测 -->
        <property name="sessionValidationSchedulerEnabled" value="true"/>
        <!-- 定义Session可以进行序列化的工具类 -->
        <property name="sessionDAO" ref="sessionDAO"/>
        <!-- 所有的session一定要将id设置到Cookie之中，需要提供有Cookie的操作模版 -->
        <property name="sessionIdCookie" ref="sessionIdCookie"/>
        <!-- 定义sessionIdCookie模版可以进行操作的启用 -->
        <property name="sessionIdCookieEnabled" value="true"/>
    </bean> 
</beans>    